{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[{"parent":"root","children":[{"parent":"4008c1bee0e28217","children":[],"id":"903f04ebaf2b8f4b","title":"位运算是直接对整数的二进制进行的运算"},{"parent":"4008c1bee0e28217","children":[],"id":"6ba5efc4deec095c","title":"正数&gt;&gt;最高位补0"},{"parent":"4008c1bee0e28217","children":[{"parent":"b6c2021e0d578c26","children":[],"id":"f1331dab66525f37","title":"&gt;&gt; 最高位补0"},{"parent":"b6c2021e0d578c26","children":[],"id":"088fb606e7c22b0e","title":"&gt;&gt;&gt;最高位补1"}],"id":"b6c2021e0d578c26","title":"对负数来说"},{"parent":"4008c1bee0e28217","image":{"w":413,"h":209,"url":"http://cdn.processon.com/60fa83d21efad46a20a2663f?e=1627034083&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Tg5U57EpJSskWVck1gHv_TlHEys="},"children":[],"id":"f1551a4296f75512","title":""}],"id":"4008c1bee0e28217","title":"位运算符"},{"parent":"root","children":[{"parent":"f301f74e52ba9935","children":[],"id":"f4276ea021ababe9","title":"结构：(条件表达式)？表达式1 : 表达式2"}],"id":"f301f74e52ba9935","title":"三元运算符"},{"parent":"root","children":[{"parent":"212e5d9926c6431b","image":{"w":317,"h":326,"url":"http://cdn.processon.com/60fa831f1efad46a20a2631f?e=1627033903&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:2aLtlTUfuSohT3ljrlWkRwDh31s="},"children":[],"id":"307b82db47f868a8","title":""}],"id":"212e5d9926c6431b","title":"运算符的优先级"}],"children":[{"parent":"root","children":[],"id":"6eb73c940c0f5f2e","title":"算术运算符"},{"parent":"root","children":[{"parent":"b2ec6dc3868de59d","children":[],"id":"fa6afd4604609bfa","title":"符号：= ，当“=”两侧数据类型不一致时，可以使用自动类型转换或使用强制类型转换原则进行处理<br>"},{"parent":"b2ec6dc3868de59d","children":[],"id":"71209540a21e57d0","title":"支持连续赋值"},{"parent":"b2ec6dc3868de59d","children":[],"id":"ce7b84b71ae59640","title":"扩展赋值运算符：+=, -=, *=, /=, %="}],"id":"b2ec6dc3868de59d","title":"赋值运算符"},{"parent":"root","children":[{"parent":"7c0705fc04b81966","children":[{"parent":"ac62406de35b2eb6","children":[],"id":"85ef48dbc33aef24","title":""}],"id":"ac62406de35b2eb6","title":"比较运算符的结果都是boolean型，也就是要么是true，要么是fals"}],"id":"7c0705fc04b81966","title":"比较运算符"},{"parent":"root","children":[{"parent":"b75b4f34453ab5ce","children":[],"id":"2ac1e847f13c2db0","title":"逻辑运算符用于连接布尔型表达式，在Java中不可以写成3&lt;x&lt;6，应该写成x&gt;3 &amp; x&lt;6&nbsp;<br>"},{"parent":"b75b4f34453ab5ce","children":[{"parent":"870fc0f7c52c66cd","children":[],"id":"3e0e31f8bb88f4a5","title":"单&amp;时，左边无论真假，右边都进行运算"},{"parent":"870fc0f7c52c66cd","children":[],"id":"98d911c34a21a741","title":"双&amp;时，如果左边为真，右边参与运算，如果左边为假，那么右边不参与运算"}],"id":"870fc0f7c52c66cd","title":"“&amp;”和“&amp;&amp;”的区别"},{"parent":"b75b4f34453ab5ce","children":[],"id":"ab304b79e132855f","title":"“|”和“||”的区别同理，||表示：当左边为真，右边不参与运算"},{"parent":"b75b4f34453ab5ce","children":[],"id":"7a15edb96e88f3e7","title":"异或(^)与或( | )的不同之处是：当左右都为true时，结果为false。理解：异或，追求的是“异"}],"id":"b75b4f34453ab5ce","title":"逻辑运算符"}],"root":true,"theme":"theme3","id":"root","title":"运算符","structure":"mind_free"}},"meta":{"exportTime":"2021-07-24 17:22:59","member":"60ef8a5cf346fb06e6a9d554","diagramInfo":{"creator":"60ef8a5cf346fb06e6a9d554","created":"2021-07-23 16:40:48","modified":"2021-07-24 17:22:45","title":"运算符","category":"outline"},"id":"60fa80907d9c083494e3d287","type":"ProcessOn Schema File","version":"1.0"}}